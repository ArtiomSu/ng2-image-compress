{"version":3,"file":"imageutilityservice.js","sourceRoot":"","sources":["../../src/lib/imageutilityservice.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAU,MAAM,iBAAiB,CAAC;AACtD,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAGlC,MAAM,OAAO,mBAAmB;IAErB,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,QAAQ;QACnC,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;QAC1B,KAAK,CAAC,MAAM,GAAG,GAAG,EAAE;YAChB,QAAQ,CAAC,KAAK,CAAC,CAAC;QACpB,CAAC,CAAC;QACF,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;IACpB,CAAC;IAEM,MAAM,CAAC,aAAa,CAAC,IAAI;QAC5B,OAAO,IAAI,OAAO,CAAM,CAAC,OAAO,EAAE,EAAE;YAChC,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAChC,MAAM,CAAC,MAAM,GAAG,UAAU,CAAM;gBAC5B,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC7B,CAAC,CAAC;YACF,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,MAAM,CAAC,mBAAmB,CAAC,QAAkB;QAEhD,OAAO,UAAU,CAAC,MAAM,CAAC,CAAC,QAA0B,EAAE,EAAE;YACpD,IAAI,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC;YAC5B,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBACpC,MAAM,WAAW,GAAW,IAAI,WAAW,EAAE,CAAC;gBAC9C,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAE3B,WAAW,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC;gBACrC,WAAW,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;gBACjC,WAAW,CAAC,cAAc,GAAG,GAAG,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;gBAC3D,mBAAmB,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;oBACxD,WAAW,CAAC,YAAY,GAAG,MAAM,CAAC;oBAClC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAC3B,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE;wBACf,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACvB;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,MAAM,CAAC,wBAAwB,CAAC,QAAgB;QAEnD,OAAO,UAAU,CAAC,MAAM,CAAC,CAAC,QAA0B,EAAE,EAAE;YACpD,IAAI,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC;YAC5B,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBACxB,MAAM,WAAW,GAAW,IAAI,WAAW,EAAE,CAAC;gBAC9C,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC3B,wCAAwC;gBACxC,WAAW,CAAC,cAAc,GAAG,GAAG,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;gBAC3D,mBAAmB,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;oBACxD,WAAW,CAAC,YAAY,GAAG,MAAM,CAAC;oBAClC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAC3B,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE;wBACf,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACvB;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;CACJ","sourcesContent":["import { SourceImage, IImage } from './compressimage';\r\nimport { Observable } from 'rxjs';\r\nimport { Observer } from 'rxjs';\r\n\r\nexport class ImageUtilityService {\r\n\r\n    public static createImage(url, callback) {\r\n        const image = new Image();\r\n        image.onload = () => {\r\n            callback(image);\r\n        };\r\n        image.src = url;\r\n    }\r\n\r\n    public static fileToDataURL(file): Promise<any> {\r\n        return new Promise<any>((resolve) => {\r\n            const reader = new FileReader();\r\n            reader.onload = function (e: any) {\r\n                resolve(e.target.result);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        });\r\n    }\r\n\r\n    public static filesToSourceImages(fileList: FileList): Observable<IImage> {\r\n\r\n        return Observable.create((observer: Observer<IImage>) => {\r\n            let total = fileList.length;\r\n            Array.from(fileList).forEach(fileItem => {\r\n                const imageResult: IImage = new SourceImage();\r\n                console.log(fileItem.name);\r\n\r\n                imageResult.fileName = fileItem.name;\r\n                imageResult.type = fileItem.type;\r\n                imageResult.imageObjectUrl = URL.createObjectURL(fileItem);\r\n                ImageUtilityService.fileToDataURL(fileItem).then((result) => {\r\n                    imageResult.imageDataUrl = result;\r\n                    observer.next(imageResult);\r\n                    if (--total === 0) {\r\n                        observer.complete();\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    public static filesArrayToSourceImages(fileList: File[]): Observable<IImage> {\r\n\r\n        return Observable.create((observer: Observer<IImage>) => {\r\n            let total = fileList.length;\r\n            fileList.forEach(fileItem => {\r\n                const imageResult: IImage = new SourceImage();\r\n                console.log(fileItem.name);\r\n                // imageResult.fileName = fileItem.name;\r\n                imageResult.imageObjectUrl = URL.createObjectURL(fileItem);\r\n                ImageUtilityService.fileToDataURL(fileItem).then((result) => {\r\n                    imageResult.imageDataUrl = result;\r\n                    observer.next(imageResult);\r\n                    if (--total === 0) {\r\n                        observer.complete();\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\r\n"]}